version: 2.1

go_15: &go_15
  docker:
    - image: cimg/go:1.15

go_16: &go_16
  docker:
    - image: cimg/go:1.16

service_a: &service_a
  working_directory: ~/go/src/github.com/smith-30/monorepo/service_a/

service_b: &service_b
  working_directory: ~/go/src/github.com/smith-30/monorepo/service_b/

go_build_and_test_steps: &go_build_and_test_steps
  - checkout
  - run: make build
  - run: make test

build_and_test: &build_and_test
  environment:
    TEST_RESULTS: /tmp/test-results
  steps:
    - checkout:
        path: ~/go/src/github.com/smith-30/monorepo
    - run: mkdir -p $TEST_RESULTS
    # - run: make install-lint
    # - run: make lint
    - restore_cache:
        name: Restore go modules cache
        keys:
          - go-mod-v1-{{ .Branch }}-{{ checksum "go.sum" }}
    - run: go mod download
    - run: make build
    - save_cache:
        name: Save go modules cache
        key: go-mod-v1-{{ .Branch }}-{{ checksum "go.sum" }}
        paths:
          - /go/pkg/mod
    - run: make ci-test TEST_RESULTS=${TEST_RESULTS}/unit-tests.xml
    - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output
    - store_test_results:
        path: /tmp/test-results

jobs:
  service_a_go_15_build_and_test:
    <<: [*go_15, *service_a, *build_and_test]
  service_a_go_16_build_and_test:
    <<: [*go_16, *service_a, *build_and_test]
  service_b_go_15_build_and_test:
    <<: [*go_15, *service_b, *build_and_test]
  service_b_go_16_build_and_test:
    <<: [*go_16, *service_b, *build_and_test]

workflows:
  golang-workflow:
    jobs:
      - service_a_go_15_build_and_test
      - service_b_go_15_build_and_test
      - service_a_go_16_build_and_test
      - service_b_go_16_build_and_test
